<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on 个人博客</title>
    <link>https://ynwugang.github.io/tags/redis/</link>
    <description>Recent content in redis on 个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 31 May 2022 12:58:24 +0800</lastBuildDate><atom:link href="https://ynwugang.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>redis学习记录（一）——NoSQL概述</title>
      <link>https://ynwugang.github.io/posts/redis/redis%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%80nosql%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 31 May 2022 12:58:24 +0800</pubDate>
      
      <guid>https://ynwugang.github.io/posts/redis/redis%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%80nosql%E6%A6%82%E8%BF%B0/</guid>
      <description>1、Nosql概述 1.1 为什么要用Nosql  单机MySQL的年代
  90年代，一个基本的网站访问量一般不会太大，单个数据库完全足够！ 那时候，更多的是使用静态网页HTML， 服务器没有太大的压力！ 思考一下，这种情况下：整个网站的瓶颈是什么？
* 数据量太大，一台机器放不下；* 数据的索引（MySQL：B+ tree），一台机器内存也放不下；* 访问量（读写混合），一台服务器承受不了；  Memcached（缓存）+ MySQL + 垂直拆分（读写分离）
 网站80%的情况都是在读，每次都要去查询数据库的话会增加数据库的压力！所以说我们希望减轻数据的压力，我们可以使用缓存来保证效率！ 发展过程：优化数据结构和索引 ==&amp;gt; 文件缓存（IO） ==&amp;gt; Memcached（当时最热门的技术！） 
 分库分表 + 水平拆分 + MySQL集群
 技术和业务在发展的同时，对人的要求也越来越高！ 本质：数据库（读，写） 早些年MyISAM：表锁，十分影响效率！高并发下就会出现严重的锁问题 转战Innodb：行锁 慢慢的就开始使用分库分表来解决写的压力！MySQL在那个年代推出了表分区（并没有多少公司使用） MySQL的集群，很好满足了那个年代的所有需求！ 
 如今最近的年代
 MySQL等关系型数据库已经不够用了！数据量很多，变化很快！ 有时候还用MySQL存储一些比较大的文件、图片等，导致数据库表变得很大，效率降低。如果有一种数据库来专门处理这种数据，MySQL压力就变得十分小（研究如何处理这些问题！）。
 目前一个基本的互联网项目
 
 为什么要用NoSQL？
 用户的个人信息、地理位置、用户日志等等数据爆发式增长！ 这时候我们就需要NoSQL数据库，NoSQL可以很好的处理以上的情况！
1.2 什么是NoSQL  NoSQL
 NoSQL（Not Only SQL）。 泛指非关系型数据库。随着web2.0互联网的诞生，传统的关系型数据库很难应付web2.0时代。尤其是超大规模的高并发的社区暴露出很多难以克服的问题。NoSQL在当今大数据环境下发展迅速。 Redis是发展最快的，而且是我们当下必须掌握的一门技术。</description>
    </item>
    
  </channel>
</rss>
